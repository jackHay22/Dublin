#!/bin/bash

GREEN='\033[0;92m'
YELLOW='\033[1;33m'
CYAN='\033[1;96m'
NC='\033[0m'
CLOVER='\xF0\x9F\x8D\x80'
BEER='\xF0\x9F\x8D\xBB'

JAVA_RUNTIME=`/usr/libexec/java_home -v 1.8`
DATE=`date +%Y-%m-%d`

lein_build () {
  printf "${CLOVER}  Building ${GREEN}Dublin${NC} jar... \n"
  lein uberjar || exit 1
}

install_lein() {
  printf "${CLOVER}  Using brew to install ${YELLOW}lein${NC}... \n"
  brew install leiningen || exit 1 #note: brew is not preferred method for lein installation
}

build_native () {
  printf "${CLOVER}  Building ${GREEN}Dublin${NC} app package... ${YELLOW}${1}${NC} \n"
  javapackager -deploy \
      -native image \
      -outdir out \
      -outfile dublin.app \
      -srcfiles target/uberjar/dublin-*.*.*-SNAPSHOT-standalone.jar \
      -appclass dublin.core \
      -name "Dublin" \
      -title "Dublin" \
      -Bruntime=${JAVA_RUNTIME} \
      -Bicon=resources/app/dublin.icns && \
  printf "${BEER}  ${GREEN}Dublin.app${NC} built to ${CYAN}/out/bundles/Dublin${NC}. \n"
}

start_docker() {
  open -a Docker || exit 1
  i=0
  while ! docker system info &>/dev/null; do
    (( i++ == 0 )) && printf "${CLOVER}  Waiting for ${CYAN}Docker${NC} daemon" %s || printf "."
    sleep 1
  done
  (( i )) && printf '\n'
  printf "${CLOVER}  Started ${CYAN}Docker${NC} daemon successfully. \n"
}

#check lein installation
if command -v lein >/dev/null 2>&1; then
  lein_build
else
  printf "${CLOVER}  Warning: ${YELLOW}lein${NC} not installed, attempting to download with homebrew... \n"
  if command -v brew >/dev/null 2>&1; then
    install_lein
  else
    printf "${CLOVER}  Warning: ${YELLOW}brew${NC} not installed, trying to download now... \n"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    install_lein
  fi
  lein_build
fi

if [ $# -eq 0 ]; then
  build_native
elif [ "$1" == "--release" ]; then
  build_native
  BUILD_NAME="Dublin-$(echo target/uberjar/dublin*.jar | awk -F"-" '{ print $2 }').zip"
  VERSION="$(echo target/uberjar/dublin*.jar | awk -F"-" '{ print $2 }')"
  pushd out/bundles
  zip -r $BUILD_NAME ./Dublin.app > /dev/null 2>&1
  popd
  printf "${CLOVER}  Copying release to ${YELLOW}web/web_content/${NC}... \n"
  cp out/bundles/$BUILD_NAME web/web_content/Dublin.zip
  docker info >/dev/null 2>&1 || start_docker
  printf "${CLOVER}  Building web image... \n"
  docker build -t downloadserver web
  printf "${BEER}  Build ${YELLOW}$VERSION${NC} release complete \n"
else
  printf "${CLOVER}  Error: ${YELLOW}"$1"${NC} not a valid build mode"
  printf "Use ${YELLOW}-release${NC}, ${YELLOW}-editor${NC}, ${YELLOW}-backup${NC} or ${YELLOW}-server${NC} \n"
  exit 1
fi
